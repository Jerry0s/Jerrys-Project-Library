#include <iostream>
#include <cstring>
#include <cctype>
#include <locale>
#define SIZE 100
using namespace std;

bool lengthTest(char pass[]);
bool lowCaseTest(char pass[]);
bool upCaseTest(char pass[]);
bool digitTest(char pass[]);
bool specialTest(char pass[]);

int main()
{
   char password[SIZE];
   bool valid = true;;

   cout << "Jerry Ortega's Password Verifier\n" << endl;
   cout << "INSTRUCTIONS: Minimum 7 characters. You need 1 lower case, 1 upper case, 1 number, and 1 special character\n" << endl;
   cout << "Enter the password: ";

   cin.getline(password, SIZE);

   if (!lengthTest(password))
   {
       valid = false;
       cout << "Password does not meet length criteria. Length should be min 7" << endl;
   }

   if (!lowCaseTest(password))
   {
       valid = false;
       cout << "Password should contain atleast one lowercase character" << endl;
   }

   if (!upCaseTest(password))
   {
       valid = false;
       cout << "Password should contain atleast one upper character" << endl;
   }

   if(!digitTest(password))
   {
       valid = false;
       cout << "Password should contain atleast one digit" << endl;
   }

   if (!specialTest(password))
   {
       valid = false;
       cout << "Password should contain atleast one non-alpha, non-digit, non-space, punctuation character" << endl;

   }

   if(valid)
   {
       cout << "The passowrd entered is valid" << endl;
   }

    return 0;
    cin.get();
    cin.ignore();
}

/* Tests if length of string is >= 7 or not */
bool lengthTest(char pass[])
{
    int numChar = strlen(pass);
    bool validlength = false;

    if (numChar >= 7)
    validlength = true;

    return validlength;

}

/* Tests if password contains lowercase characters or not */
bool lowCaseTest(char pass[])
{
    for (int cnt = 0; cnt < strlen(pass); cnt++)
    {
        if (islower(pass[cnt]))
        return true;
    }
    return false;
}

/* Tests if password contains uppercase characters or not */
bool upCaseTest(char pass[])
{
    for (int cnt = 0; cnt < strlen(pass); cnt++)
    {
        if (isupper(pass[cnt]))
        return true;
    }
    return false;
}

/* Tests if password contains digits or not */
bool digitTest(char pass[])
{
    for (int cnt = 0; cnt < strlen(pass); cnt++)
    {
        if (isdigit(pass[cnt]))
        return true;
    }
    return false;
}

/* Tests if password contains special characters or not */
bool specialTest(char pass[])
{
    for (int cnt = 0; cnt < strlen(pass); cnt++)
    {
        if (ispunct(pass[cnt]))
        return true;
    }
    return false;
}
